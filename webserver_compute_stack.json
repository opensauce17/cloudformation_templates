{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Web Server Compute Stack",
    "Mappings": {
        "AWSRegionArch2AMI": {
            "eu-central-1": {"HVM64": "ami-00f22f6155d6d92c5"},
            "eu-west-1": {"HVM64": "ami-058b1b7fe545997ae"}
        }
    },
    "Parameters": {
        "EnvironmentName": {
            "Type": "String",
            "Description": "The identifier of the environment for naming resource tags. Ex: Development/Production",
            "Default": "dev",
            "AllowedValues": ["dev", "prod"],
            "ConstraintDescription": "must be dev or prod"
        },
        "NetWorkStackName": {
            "Type": "String",
            "Description": "The name of the related VPC and networking Stack"
        },
        "RoleName": {
            "Type": "String",
            "Description": "The name of the role assigned to the EC2 instance for Session Manager and Cloudwatch access"
        },
        "AvailabilityZoneA":{
            "Description":"The A availability zone where the resources will be deployed",
            "Type":"AWS::EC2::AvailabilityZone::Name",
            "ConstraintDescription":"Must be a valid availability zones. Ex: eu-west-1a"
        },
        "AvailabilityZoneB":{
            "Description":"The B availability zones where the resources will be deployed",
            "Type":"AWS::EC2::AvailabilityZone::Name",
            "ConstraintDescription":"Must be a valid availability zones. Ex: eu-west-1a"
        },
        "WebServer1HostName": {
            "Type": "String",
            "Description": "The hostname identifier of the First Web Server"
        },
        "WebServer2HostName": {
            "Type": "String",
            "Description": "The hostname identifier of the Second Web Server"
        },
        "EC2AMI": {
            "Description": "AMI to use for EC2 instances. Leave blank to use template region mapping",
            "AllowedPattern": "(ami-[0-9a-f]{8}){0,1}",
            "Default": "",
            "Type": "String"
        },
         "DBInstanceID": {
            "Default": "WebServerRDS",
            "Description": "The RDS instance for the Web Server infrascruture",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "63",
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription": "Must begin with a letter and must not end with a hyphen or contain two consecutive hyphens."
        },
        "DBName": {
            "Default": "rds",
            "Description": "The Database name for the Web Server infrascruture",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "64",
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription": "Must begin with a letter and contain only alphanumeric characters."
        },
        "DBInstanceClass": {
            "Default": "",
            "Description": "DB instance class",
            "Type": "String",
            "ConstraintDescription": "Must select a valid DB instance type."
        },
        "DBAllocatedStorage": {
            "Default": "50",
            "Description": "The size of the database (GiB)",
            "Type": "Number",
            "MinValue": "20",
            "MaxValue": "65536",
            "ConstraintDescription": "must be between 20 and 65536 GiB."
        },
        "DBUsername": {
            "NoEcho": "true",
            "Description": "Username for MySQL database access",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "16",
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters."
        },

        "DBPassword": {
            "NoEcho": "true",
            "Description": "Password MySQL database access",
            "Type": "String",
            "MinLength": "8",
            "MaxLength": "41",
            "AllowedPattern": "[a-zA-Z0-9]*",
            "ConstraintDescription": "must contain only alphanumeric characters."
        }
    },
     "Conditions": {
        "UseDefaultAMI": {
            "Fn::Equals": [
                {"Ref": "EC2AMI"},
                ""
            ]
        },
        "UseDefaultDBInstanceClass": {
            "Fn::Equals": [
                {"Ref": "DBInstanceClass"},
                ""
            ]
        },
        "CreateProdResources" : {
            "Fn::Equals" : [
                    {"Ref" : "EnvironmentName"}, "prod"]
        },
        "CreateDevResources" : {
            "Fn::Equals" : [{"Ref" : "EnvironmentName"}, "dev"]
        }
    },
    "Resources": {
        "InstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "InstanceProfileName": "SSM-Instance-Profile",
                "Path": "/",
                "Roles": [
                    {
                        "Fn::Sub": "${RoleName}"
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "5b767018-2f81-48a4-939a-9892b4de5f9a"
                }
            }
        },
        "WebServer1": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "AvailabilityZone":{
                   "Ref":"AvailabilityZoneA"
                },
                "IamInstanceProfile": {
                    "Ref": "InstanceProfile"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${EnvironmentName}-Webserver1"
                        }
                    }
                ],
                "InstanceType": { 
                        "Fn::If" : [
                            "CreateProdResources",
                            "c1.xlarge",
                            {"Fn::If" : [
                            "CreateDevResources",
                             "t2.micro",
                             ""
                  ]}
                ]},
                "ImageId": {
                    "Fn::If": [
                        "UseDefaultAMI",
                        {"Fn::FindInMap": [
                                "AWSRegionArch2AMI",
                                {"Ref": "AWS::Region"},
                                "HVM64"
                        ]},
                        {"Ref": "EC2AMI"}
                    ]
                },
                "NetworkInterfaces": [
                    {
                        "GroupSet": [
                            {
                                "Fn::ImportValue": {
                                    "Fn::Sub": "${NetWorkStackName}-WEBTIERSG"
                                }
                            }
                        ],
                        "AssociatePublicIpAddress": "true",
                        "DeviceIndex": "0",
                        "DeleteOnTermination": "true",
                        "SubnetId": {
                            "Fn::ImportValue": {
                                "Fn::Sub": "${NetWorkStackName}-PUBSUBA"
                            }
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xe\n",
                                {
                                    "Fn::Sub": "sudo hostnamectl set-hostname ${WebServer1HostName}\n"
                                },
                                "sudo yum update -y\n",
                                "sudo yum install -y awslogs httpd\n",
                                "sudo systemctl start httpd\n",
                                "sudo chkconfig httpd on\n",
                                "sudo systemctl enable httpd\n",
                                {
                                    "Fn::Sub": "echo Hello World from ${WebServer1HostName} > /var/www/html/index.html\n"
                                },
                                "# Add apache logs to cloudwatch\n",
                                "cat << 'EOF' >> /etc/awslogs/awslogs.conf\n\n",
                                "[apache logs]\n",
                                "datetime_format = %b %d %H:%M:%S\n",
                                "file = /var/log/httpd/access_log\n",
                                "buffer_duration = 5000\n",
                                {
                                    "Fn::Sub": "log_stream_name = ${WebServer1HostName}\n"
                                },
                                "initial_position = start_of_file\n",
                                "log_group_name = apaches_logs\n",
                                "EOF\n",
                                "sudo systemctl start awslogsd\n",
                                "sudo chkconfig awslogsd on\n",
                                "sudo systemctl enable awslogsd.service\n",
                                "sudo curl localhost\n"
                            ]
                        ]
                    }
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "7b2052b9-a661-422c-ada4-7d4941793e4d"
                }
            }
        },
        "WebServer2": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "AvailabilityZone":{
                   "Ref":"AvailabilityZoneB"
                },
                "IamInstanceProfile": {
                    "Ref": "InstanceProfile"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${EnvironmentName}-Webserver2"
                        }
                    }
                ],
                "InstanceType":{
                        "Fn::If" : [
                            "CreateProdResources",
                            "c1.xlarge",
                            {"Fn::If" : [
                            "CreateDevResources",
                             "t2.micro",
                             ""
                  ]}
                ]},
                "ImageId": {
                    "Fn::If": [
                        "UseDefaultAMI",
                        {"Fn::FindInMap": [
                                "AWSRegionArch2AMI",
                                {"Ref": "AWS::Region"},
                                "HVM64"
                        ]},
                        {"Ref": "EC2AMI"}
                    ]
                },
                "NetworkInterfaces": [
                    {
                        "GroupSet": [
                            {
                                "Fn::ImportValue": {
                                    "Fn::Sub": "${NetWorkStackName}-WEBTIERSG"
                                }
                            }
                        ],
                        "AssociatePublicIpAddress": "true",
                        "DeviceIndex": "0",
                        "DeleteOnTermination": "true",
                        "SubnetId": {
                            "Fn::ImportValue": {
                                "Fn::Sub": "${NetWorkStackName}-PUBSUBB"
                            }
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xe\n",
                                {
                                    "Fn::Sub": "sudo hostnamectl set-hostname ${WebServer2HostName}\n"
                                },
                                "sudo yum update -y\n",
                                "sudo yum install -y awslogs httpd\n",
                                "sudo systemctl start httpd\n",
                                "sudo chkconfig httpd on\n",
                                "sudo systemctl enable httpd\n",
                                {
                                    "Fn::Sub": "echo Hello World from ${WebServer2HostName} > /var/www/html/index.html\n"
                                },
                                "# Add apache logs to cloudwatch\n",
                                "cat << 'EOF' >> /etc/awslogs/awslogs.conf\n\n",
                                "[apache logs]\n",
                                "datetime_format = %b %d %H:%M:%S\n",
                                "file = /var/log/httpd/access_log\n",
                                "buffer_duration = 5000\n",
                                {
                                    "Fn::Sub": "log_stream_name = ${WebServer2HostName}\n"
                                },
                                "initial_position = start_of_file\n",
                                "log_group_name = apaches_logs\n",
                                "EOF\n",
                                "sudo systemctl start awslogsd\n",
                                "sudo chkconfig awslogsd on\n",
                                "sudo systemctl enable awslogsd.service\n",
                                "sudo curl localhost\n"
                            ]
                        ]
                    }
                }
            }
        },
        "AppLb": {
            "Type":"AWS::ElasticLoadBalancingV2::LoadBalancer",
            "Properties": {
                "Scheme":"internet-facing",
                "Subnets":[
                   {
                        "Fn::ImportValue": {
                        "Fn::Sub": "${NetWorkStackName}-PUBSUBA"
                         }
                   },
                   {
                        "Fn::ImportValue": {
                        "Fn::Sub": "${NetWorkStackName}-PUBSUBB"
                        }
                   }
                ],
                "SecurityGroups":[
                    {
                         "Fn::ImportValue": {
                         "Fn::Sub": "${NetWorkStackName}-WEBTIERSG"
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${EnvironmentName}-ALB"
                        }
                    }
                ]
            }
        },
        "HTTP80Listener":{  
            "Type":"AWS::ElasticLoadBalancingV2::Listener",
            "Properties":{
                "DefaultActions":[
                  {
                    "Type":"forward",
                    "TargetGroupArn":{
                      "Ref":"LbTg"
                    }
                  }
                ],
                "LoadBalancerArn":{
                  "Ref":"AppLb"
                },
                "Port":"80",
                "Protocol":"HTTP"
              }
            },
       "ListenerRule":{  
            "Type":"AWS::ElasticLoadBalancingV2::ListenerRule",
            "Properties":{  
                "Actions":[  
                {  
                    "Type":"forward",
                    "TargetGroupArn":{  
                    "Ref":"LbTg"
                    }
                }
            ],
            "Conditions":[  
                {  
                    "Field":"path-pattern",
                    "Values":[  
                    "*"
                    ]
                }
            ],
        "ListenerArn":{  
          "Ref":"HTTP80Listener"
        },
        "Priority":1
      }
    },    
        "LbTg":{  
            "Type":"AWS::ElasticLoadBalancingV2::TargetGroup",
            "Properties":{  
                "Name":"LbTg",
                "Port":80,
                "Protocol":"HTTP",
                "TargetGroupAttributes":[  
                {  
                    "Key":"deregistration_delay.timeout_seconds",
                    "Value":"20"
                }
                ],
                "VpcId": {
                        "Fn::ImportValue": {
                        "Fn::Sub": "${NetWorkStackName}-VPCID"
                    }
                },
                "Targets":[  
                {  
                    "Id":{  
                    "Ref":"WebServer1"
                    },
                    "Port":80
                },
                {  
                    "Id":{  
                    "Ref":"WebServer2"
                    },
                    "Port":80
                }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${EnvironmentName}-WebTg"
                        }
                    }
                ]
            }
        },
        "RDSInstance": {
            "Type": "AWS::RDS::DBInstance",
            "Properties": {
                "DBInstanceIdentifier": {
                    "Ref": "DBInstanceID"
                },
                "DBName": {
                    "Ref": "DBName"
                },
                "DBInstanceClass": {
                    "Fn::If": [
                        "UseDefaultDBInstanceClass",
                        {"Fn::If" : [ 
                            "CreateProdResources",
                            "db.m5.large",
                            {"Fn::If" : [
                            "CreateDevResources",
                             "db.t2.micro",
                             ""
                        ]}
                ]},
                ""
            ]},
                "AllocatedStorage": {
                    "Ref": "DBAllocatedStorage"
                },
                "Engine": "MySQL",
                "EngineVersion": "8.0.16",
                "MasterUsername": {
                    "Ref": "DBUsername"
                },
                "MasterUserPassword": {
                    "Ref": "DBPassword"
                }
            }
        }
    },
    "Outputs": {
        "WEBSERVER1": {
            "Description": "The ID of Webserver 1",
            "Value": {
                "Ref": "WebServer1"
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-WEBSERVER1"
                }
            }
        },
        "WEBSERVER2": {
            "Description": "The ID of Webserver 2",
            "Value": {
                "Ref": "WebServer2"
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-WEBSERVER2"
                }
            }
        },
        "WEB1PUBLICIP":{
            "Description":"PublicIp of WebServer1",
            "Value":{  
                "Fn::GetAtt":[  
                "WebServer1",
                "PublicIp"
            ]
        }
    },
        "WEB2PUBLICIP":{
            "Description":"PublicIp of WebServer2",    
            "Value":{  
                "Fn::GetAtt":[  
                "WebServer2",
                "PublicIp"
            ]
        }
    },
        "APPLBDNSNAME":{  
            "Description":"DNSName of the Application Load Balancer",
            "Value":{  
                "Fn::GetAtt":[  
                    "AppLb",
                    "DNSName"
        ]
      }
    },
       "RDSINSTANCE": {
            "Description":"The ID of the RDS instance",
            "Value":{
               "Ref": "RDSInstance"     
           },
           "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-RDSINSTANCE"
                }
            }
        }
    }
  }
